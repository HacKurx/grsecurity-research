diff -NurpX linux-4.9.24-pax/Documentation/dontdiff linux-4.9.24/arch/ia64/include/asm/uaccess.h linux-4.9.24-pax/arch/ia64/include/asm/uaccess.h
--- linux-4.9.24/arch/ia64/include/asm/uaccess.h	2016-10-03 11:27:19.748989592 +0200
+++ linux-4.9.24-pax/arch/ia64/include/asm/uaccess.h	2017-01-01 22:57:10.557520617 +0100
@@ -241,17 +242,23 @@ extern unsigned long __must_check __copy
 static inline unsigned long
 __copy_to_user (void __user *to, const void *from, unsigned long count)
 {
+	if (count > INT_MAX)
+		return count;
+
 	check_object_size(from, count, true);
 
-	return __copy_user(to, (__force void __user *) from, count);
+	return __copy_user(to, (void __force_user *) from, count);
 }
 
 static inline unsigned long
 __copy_from_user (void *to, const void __user *from, unsigned long count)
 {
+	if (count > INT_MAX)
+		return count;
+
 	check_object_size(to, count, false);
 
-	return __copy_user((__force void __user *) to, from, count);
+	return __copy_user((void __force_user *) to, from, count);
 }
 
 #define __copy_to_user_inatomic		__copy_to_user
@@ -260,11 +267,11 @@ __copy_from_user (void *to, const void _
 ({											\
 	void __user *__cu_to = (to);							\
 	const void *__cu_from = (from);							\
-	long __cu_len = (n);								\
+	unsigned long __cu_len = (n);							\
 											\
-	if (__access_ok(__cu_to, __cu_len, get_fs())) {					\
-		check_object_size(__cu_from, __cu_len, true);			\
-		__cu_len = __copy_user(__cu_to, (__force void __user *)  __cu_from, __cu_len);	\
+	if (__cu_len <= INT_MAX && __access_ok(__cu_to, __cu_len, get_fs())) {		\
+		check_object_size(__cu_from, __cu_len, true);				\
+		__cu_len = __copy_user(__cu_to, (void __force_user *)  __cu_from, __cu_len);	\
 	}										\
 	__cu_len;									\
 })
@@ -272,10 +279,10 @@ __copy_from_user (void *to, const void _
 static inline unsigned long
 copy_from_user(void *to, const void __user *from, unsigned long n)
 {
-	check_object_size(to, n, false);
-	if (likely(__access_ok(from, n, get_fs())))
-		n = __copy_user((__force void __user *) to, from, n);
-	else
+	if (likely(__access_ok(from, n, get_fs()))) {
+		check_object_size(to, n, false);
+		n = __copy_user((void __force_user *) to, from, n);
+	} else if ((long)n > 0)
 		memset(to, 0, n);
 	return n;
 }
